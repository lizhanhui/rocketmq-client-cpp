syntax = "proto3";

import "apache/rocketmq/v1/definition.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";

package apache.rocketmq.v1;

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_package = "apache.rocketmq.v1";
option java_generate_equals_and_hash = true;
option java_string_check_utf8 = true;

// Ali Cloud Service
option java_outer_classname = "ACS";

message ChangeLogLevelRequest {
  enum Level {
    TRACE = 0;
    DEBUG = 1;
    INFO = 2;
    WARN = 3;
    ERROR = 4;
  }
  Level level = 1;
}

message ChangeLogLevelResponse {
  string remark = 1;
}

// Request for the UpdateTopic method.
message UpdateTopicRequest {
  // Instance identifier
  string instance_id = 1;

  // Required. The updated topic object.
  Resource topic = 2;

  // Required. Indicates which fields in the provided topic to update. Must be
  // specified and non-empty. Note that if `update_mask` contains
  // "message_storage_policy" but the `message_storage_policy` is not set in
  // the `topic` provided above, then the updated value is determined by the
  // policy configured at the project or organization level.
  google.protobuf.FieldMask update_mask = 3;
}

// Request for the `ListTopics` method.
message ListTopicsRequest {

  string instance_id = 1;

  // Maximum number of topics to return.
  int32 page_size = 2;

  // The value returned by the last `ListTopicsResponse`; indicates that this is
  // a continuation of a prior `ListTopics` call, and that the system should
  // return the next page of data.
  string page_token = 3;
}

// Response for the `ListTopics` method.
message ListTopicsResponse {
  // The resulting topics.
  repeated Resource topics = 1;

  // If not empty, indicates that there may be more topics that match the
  // request; this value should be passed in a new `ListTopicsRequest`.
  string next_page_token = 2;
}

// Request for the `DeleteTopic` method.
message DeleteTopicRequest {
  // Instance identifier
  string instance_id = 1;

  // Required. Name of the topic to delete.
  string topic = 2;
}

// Request for GetTopic method
message GetTopicRequest {
  Resource topic = 1;
}

message DeleteConsumerGroupRequest {
  string instance_id = 1;
  string group_id = 2;
}

message UpdateConsumerGroupRequest {
  ConsumerData consumer_data = 1;
  google.protobuf.FieldMask update_mask = 2;
}

// Request for the `ListConsumerGroups` method.
message ListConsumerGroupsRequest {

  string instance_id = 1;

  // Maximum number of topics to return.
  int32 page_size = 2;

  // The value returned by the last `ListTopicsResponse`; indicates that this is
  // a continuation of a prior `ListTopics` call, and that the system should
  // return the next page of data.
  string page_token = 3;
}

// Response for the `ListConsumerGroups` method.
message ListConsumerGroupsResponse {
  // The resulting consumer groups.
  repeated Resource consumer_group = 1;

  // If not empty, indicates that there may be more topics that match the
  // request; this value should be passed in a new `ListTopicsRequest`.
  string next_page_token = 2;
}

service Admin {
  rpc ChangeLogLevel(ChangeLogLevelRequest) returns (ChangeLogLevelResponse) {
  }

  rpc GetTopic(GetTopicRequest) returns (Resource) {
  }

  rpc CreateTopic(Resource) returns (Resource) {
  }

  rpc UpdateTopic(UpdateTopicRequest) returns (Resource) {
  }

  rpc DeleteTopic(DeleteTopicRequest) returns (google.protobuf.Empty) {
  }

  rpc CreateConsumerGroup(Resource) returns (Resource) {
  }

  rpc DeleteConsumerGroup(DeleteConsumerGroupRequest) returns (google.protobuf.Empty) {
  }

  rpc UpdateConsumerGroup(UpdateConsumerGroupRequest) returns (Resource) {
  }
}